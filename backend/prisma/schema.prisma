// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://admin:1234@db:5432/competition?schema=public"
}

model User {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(100)
  email       String        @unique
  password    String        @db.VarChar(100)
  judge       Boolean       @default(false)
  bio         String?
  createdAt   DateTime      @default(now())
  Competition Competition[]
  Submission  Submission[]
  Rating      Rating[]
  Participant Participant[]
}

model Competition {
  id           Int           @id @default(autoincrement())
  title        String        @db.VarChar(50)
  type         String        @db.VarChar(30)
  description  String        @db.VarChar(200)
  rules        String
  instructions String
  creator      User?         @relation(fields: [userId], references: [id])
  userId       Int?
  startDate    DateTime
  endDate      DateTime
  createdAt    DateTime      @default(now())
  Submission   Submission[]
  Participant  Participant[]
}

model Submission {
  id            Int          @id @default(autoincrement())
  content       String
  description   String?
  user          User?        @relation(fields: [userId], references: [id])
  userId        Int?
  competition   Competition? @relation(fields: [competitionId], references: [id])
  competitionId Int?
  createdAt     DateTime     @default(now())
  Rating        Rating[]
  rating        Float        @default(0)
}

model Rating {
  id           Int         @id @default(autoincrement())
  feedback     String?
  user         User?       @relation(fields: [userId], references: [id])
  userId       Int?
  submission   Submission? @relation(fields: [submissionId], references: [id])
  submissionId Int?
  rating       Int
}

model Participant {
  id            Int          @id @default(autoincrement())
  user          User?        @relation(fields: [userId], references: [id])
  userId        Int?
  competition   Competition? @relation(fields: [competitionId], references: [id])
  competitionId Int?

  @@unique([userId, competitionId])
}
