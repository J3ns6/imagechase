// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(100)
  admin       Boolean       @default(false)
  bio         String?
  sub         String        @unique
  createdAt   DateTime      @default(now())
  Competition Competition[]
  Submission  Submission[]
  Rating      Rating[]
  Judge       Judge[]
}

model Competition {
  id           Int          @id @default(autoincrement())
  imageUrl     String
  imageAlt     String
  title        String       @db.VarChar(50)
  type         String       @db.VarChar(30)
  description  String       @db.VarChar(200)
  rules        String
  instructions String
  Creator      User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       Int
  startDate    DateTime
  endDate      DateTime
  createdAt    DateTime     @default(now())
  Submission   Submission[]
  Judge        Judge[]
}

model Submission {
  id            Int         @id @default(autoincrement())
  imageUrl      String
  imageAlt      String
  description   String?
  User          User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        Int
  Competition   Competition @relation(fields: [competitionId], references: [id], onDelete: Cascade)
  competitionId Int
  createdAt     DateTime    @default(now())
  Rating        Rating[]
  rating        Float       @default(0)
}

model Rating {
  id           Int        @id @default(autoincrement())
  feedback     String?
  Submission   Submission @relation(fields: [submissionId], references: [id], onDelete: Cascade)
  submissionId Int
  rating       Float
  User         User       @relation(fields: [userId], references: [id])
  userId       Int
  createdAt    DateTime   @default(now())
}

model Judge {
  id            Int         @id @default(autoincrement())
  User          User        @relation(fields: [userId], references: [id])
  userId        Int
  Competition   Competition @relation(fields: [competitionId], references: [id], onDelete: Cascade)
  competitionId Int

  @@unique([userId, competitionId])
}
